#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#undef MOVE_UP 
#undef MOVE_DOWN 
#undef MOVE_LEFT 
#undef MOVE_RIGHT 
#define MOVE_UP MOVE_VERT(-6000)
#define MOVE_DOWN MOVE_VERT(6000)
#define MOVE_LEFT MOVE_HOR(-6000)
#define MOVE_RIGHT MOVE_HOR(6000)

#undef SCROLL_UP 
#undef SCROLL_DOWN
#define SCROLL_UP SCROLL_VERT(40)
#define SCROLL_DOWN SCROLL_VERT(-40)

#define NAV_LAYER 1
#define SYM_LAYER 2
#define SYSTEM_LAYER 3


// &mmv {
//     time-to-max-speed-ms = <500>;
// };
//
// &mwh {
//     time-to-max-speed-ms = <500>;
// };

/ {
        behaviors {
                ht: holdtap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "THUMB_HOLD_TAPS";
                        #binding-cells = <2>;
                        tapping-term-ms = <300>;
                        flavor = "balanced";
                        global-quick-tap;
                        quick-tap-ms = <0>;
                        bindings = <&kp>, <&kp>;
                };
        };

        macros {
                ae: ae {
                        label = "ä";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp U>
                                , <&macro_release &kp LALT>
                                , <&macro_tap &kp A>
                                ;
                };
                oe: oe {
                        label = "ö";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp U>
                                , <&macro_release &kp LALT>
                                , <&macro_tap &kp O>
                                ;
                };
                cae: cae {
                        label = "Ä";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp U>
                                , <&macro_release &kp LALT>
                                , <&macro_press &kp LSHFT>
                                , <&macro_tap &kp A>
                                , <&macro_release &kp LSHFT>
                                ;
                };
                coe: coe {
                        label = "Ö";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp U>
                                , <&macro_release &kp LALT>
                                , <&macro_press &kp LSHFT>
                                , <&macro_tap &kp O>
                                , <&macro_release &kp LSHFT>
                                ;
                };
        };

        
        combos {
                compatible = "zmk,combos";
                combo_mo1 {
                    timeout-ms = <50>;
                    key-positions = <39 40>;
                    bindings = <&mo SYSTEM_LAYER>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB
   &kp Q &kp W &kp F &kp P &kp G   
   &kp J &kp L &kp U &kp Y &kp SEMI
   &kp BSPC

   &kp ESC
   &kp A &kp R &kp S &kp T &kp D
   &kp H &kp N &kp E &kp I &kp O
   &kp RET

   &kp LSHFT 
   &kp Z &kp X &kp C &kp V &kp B
   &kp K &kp M  &kp COMMA &kp DOT &kp FSLH
   &kp RSHFT 

   &kp LCTRL &kp LALT &kp LGUI 
   &lt NAV_LAYER SPACE &mo SYM_LAYER &kp RGUI
                        >;
                };

                nav_layer {
                        bindings = <
   &none 
   &kp TILDE &kp GRAVE &kp PIPE &kp BSLH &none
   &none   &none   &none   &none   &none                                     
   // &mwh SCROLL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT 
   &none

   &none 
   &caps_word &none &none &none &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS
   // &caps_word &none &mkp RCLK &mkp LCLK &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS
   &none   &kp LEFT &kp DOWN &kp UP &kp RIGHT 
   // &mwh SCROLL_UP &kp LEFT &kp DOWN &kp UP &kp RIGHT 
   &none

   &none
   &kp LSHFT &kp LBRC &kp LBKT &kp RBKT &kp RBRC
   &kp LG(TAB) &kp HOME &kp PG_DN &kp PG_UP &ht RSHFT END
   &none

   &trans &trans &trans
   &trans &trans &trans
                        >;
                };

                sym_layer {
                        bindings = <
   &none
   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5
   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
   &none

   &none
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   
   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &none

   &none
   &ht LSHFT DOT &kp UNDER &kp MINUS &kp PLUS &kp EQUAL  
   &kp APOS &kp DQT &ae &oe &trans
   &none

   &trans &trans &trans
   &trans &trans &trans
                        >;
                };

                system_layer {
                        bindings = <
   &none
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 
   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
   &none

   &none
   &kp C_BRIGHTNESS_INC &none &bt BT_SEL 2 &bt BT_SEL 3 &none
   &kp C_VOL_UP &none &none &none &none
   &none

   &none
   &kp C_BRIGHTNESS_DEC &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &out OUT_TOG
   &kp C_VOL_DN &kp C_PLAY_PAUSE &cae &coe &trans
   &none 

   &trans &trans &trans
   &trans &trans &trans
                        >;
                };

        };
};
// #define DEF 0
// #define LWR 1
// #define RSE 2
// #define ADJ 3
//
// &lt {
//     quick-tap-ms = <200>;
// };
//
// &mt {
//     quick-tap-ms = <200>;
// };
//
// / {
//     conditional_layers {
//         compatible = "zmk,conditional-layers";
//
//         tri-layer {
//             if-layers = <1 2>;
//             then-layer = <3>;
//         };
//     };
//
//     keymap {
//         compatible = "zmk,keymap";
//
//         default_layer {
//             bindings = <
//                 &mt LGUI RBKT     &kp Q   &kp W   &kp E         &kp R             &kp T         &kp Y         &kp U            &kp I         &kp O     &kp P      &kp LBKT       
//                 &mt LCTRL GRAVE   &kp A   &kp S   &kp D         &kp F             &kp G         &kp H         &kp J            &kp K         &kp L     &kp SEMI   &mt RCTRL SQT
//                 &mt LALT MINUS    &kp Z   &kp X   &kp C         &kp V             &kp B         &kp N         &kp M            &kp COMMA     &kp DOT   &kp FSLH   &mt RALT BSLH
//                                                   &lt RSE TAB   &mt LSHFT SPACE   &lt LWR RET   &lt LWR ESC   &mt RSHFT BSPC   &lt RSE DEL
//             >;
//         };
//         lower_layer {
//             bindings = <
//                 &mt LGUI F1      &kp F2     &kp F3   &kp F4        &kp F5     &kp F6      &kp F7      &kp F8     &kp F9        &kp F10    &kp F11    &kp F12           
//                 &mt LCTRL PLUS   &kp EXCL   &kp AT   &kp HASH      &kp DLLR   &kp PRCNT   &kp CARET   &kp AMPS   &kp STAR      &kp LPAR   &kp RPAR   &mt RCTRL MINUS
//                 &mt LALT EQUAL   &kp N1     &kp N2   &kp N3        &kp N4     &kp N5      &kp N6      &kp N7     &kp N8        &kp N9     &kp N0     &kp RALT
//                                                      &trans        &trans     &trans      &trans      &trans     &trans
//             >;
//         };
//
//         raise_layer {
//             bindings = <
//                 &mt LGUI KP_NUM   &kp KP_SLASH      &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_MINUS   &kp C_VOL_UP   &kp HOME   &kp PSCRN   &kp PG_UP   &kp SLCK          &kp CLCK   
//                 &mt LCTRL EQUAL   &kp KP_MULTIPLY   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS    &kp C_MUTE     &kp LEFT   &kp UP      &kp RIGHT   &kp INS           &mt RCTRL  K_APP
//                 &kp LALT          &kp KP_N0         &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_DOT     &kp C_VOL_DN   &kp END    &kp DOWN    &kp PG_DN   &kp PAUSE_BREAK   &kp RALT
//                                                                 &trans      &trans      &trans         &trans         &trans     &trans
//             >;
//         };
//         adjust_layer {
//             bindings = <
//                 &bootloader   &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &bootloader
//                 &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR
//                 &sys_reset    &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &sys_reset
//                                                             &trans         &none          &trans         &none          &trans         &trans
//             >;
//         };
//     };
// };
